<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.1</version> <!-- <spring-framework.version>5.3.21</spring-framework.version> -->
		<relativePath/> <!-- lookup parent from repository 2.7.1-->
	</parent>
	<groupId>com.github.yash777</groupId>
	<artifactId>User-Service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>User-Service</name>
	<description>User Service to get list of User details</description>
	<properties>
		<java.version>1.8</java.version>
		<!-- <maven-jar-plugin.version>3.1.1</maven-jar-plugin.version> -->
		<mockito.version>4.6.1</mockito.version>
	</properties>
	<dependencies>
		<!-- For injecting Mockito Mocks into Spring Beans, we need to add the Mockito-core dependency in our build configuration file. -->
		<!-- <dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>$NO-MVN-MAN-VER$
			<scope>test</scope>
		</dependency> -->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
			<!-- Exclude tomcat and use jetty server -->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Using Jetty as the payload size is comparatively smaller.
		and jetty achieves high throughput in this case -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<!-- <scope>test</scope> --> <!-- runtime, test -->
		</dependency>
		
		<!-- <lombok.version>1.18.24</lombok.version>
		As already included in spring-boot-dependencies 2.7.1 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<!-- junit-jupiter:5.8.2, mockito:4.5.1 -->
			<!-- <exclusions>
				<exclusion>
					<groupId>org.junit.jupiter</groupId>
					<artifactId>junit-jupiter</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.mockito</groupId>
					<artifactId>mockito-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.mockito</groupId>
					<artifactId>mockito-junit-jupiter</artifactId>
				</exclusion>
			</exclusions> -->
		</dependency>
	</dependencies>

<!-- To create an executable jar, we need to add the spring-boot-maven-plugin to our pom.xml.
To Build application as a jar file use `mvn package.
Package file will be generated in target folder with name as `myproject-0.0.1-SNAPSHOT.jar`.
To run the application use - $ `java -jar target/myproject-0.0.1-SNAPSHOT.jar`
-->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
